{"version":3,"file":"static/js/214.53897356.chunk.js","mappings":"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","sources":["api/api.js","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","components/MovieList/MovieList.styled.js","components/Notification/Notification.jsx","components/Pagination/Pagination.jsx","pages/Home.styled.js","components/SearchBar/Search.styled.js","components/SearchBar/Search.jsx","pages/Movies.styled.js","pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const API_IMG = {\n  IMAGE_URL: 'https://image.tmdb.org/t/p',\n}\n\nexport const fetchFilms = async page => {\n    const response = await axios.get('/trending/movie/week', {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n        page: page\n      }\n    })\n    \n    return response;\n};\n\nexport const fetchFilmsByGenre = async () => {\n    const response = await axios.get('/genre/movie/list', {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n        \n      }\n    })\n    \n  return response ;\n};\n\nexport const fetchFilmsById = async (id) => {\n    const response = await axios.get(`/movie/${id}`, {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n      }\n    })\n  \n    return response.data;\n};\nexport const fetchFilmsByExternalId = async (id) => {\n    const response = await axios.get(`/movie/${id}`, {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n      }\n    })\n  \n    return response.data;\n};\n\nexport const fetchFilmsByCredits = async (id) => {\n    const response = await axios.get(`/movie/${id}/credits`, {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n      }\n    })\n  \n    return response.data.cast;\n};\n\nexport const fetchFilmsReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews`, {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n      }\n    })\n  \n  return response.data.results;\n};\n\nexport const fetchFilmsByQuery = async (query, page) => {\n    const response = await axios.get(`/search/movie`, {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n        query: query,\n        page: page,\n      }\n    })\n  \n  return response;\n};\n\nexport const fetchVideo = async id => {\n  const response = await axios.get(`/movie/${id}/videos`, {\n      params: {\n        api_key: 'ac2f015efbd63aedea7bf25c08e7a150',\n      }\n    }\n  );\n  return response.data.results;\n};\n\n\n  \n\n\n","import styled from \"styled-components\";\n\nexport const Item = styled.li``;\n\nexport const Image = styled.img`\n  width: 100%;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  object-fit: cover;\n  box-shadow: 0 1px 3px 0 rgb(0 0 0 / 20%), 0 2px 5px 0 rgb(0 0 0 / 14%),\n    0 2px 10px -1px rgb(0 0 0 / 12%);\n  transition: all 250ms ease-in-out;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.05) translateY(-5px);\n    box-shadow: 0px 5px 14px 2px rgba(0, 0, 0, 0.55);\n  }\n  @media screen and (max-width: 767px) {\n    min-height: 420px;\n  }\n  @media screen and (min-width: 768px) and (max-width: 1023px) {\n    min-height: 450px;\n  }\n  @media screen and (min-width: 1024px) {\n    min-height: 310px;\n  }\n`;\n\nexport const TitleH2 = styled.h2`\n  min-height: 28px;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 14px;\n  text-transform: uppercase;\n  color: var(--color-dark-grey);\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Genres = styled.p`\n  display: inline-block;\n  margin-right: 10px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 16px;\n  color: var(--color-green);\n`;\n\nexport const Rating = styled.p`\n  min-width: 36px;\n  height: 16px;\n  border-radius: 5px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 12px;\n  text-align: center;\n  line-height: 16px;\n  color: #ffffff;\n  background-color: ${props => {\n  if (props.rating <= 4) {\n    return `tomato`\n  }\n  if (props.rating <= 7) {\n    return `#F78D05`\n  }\n  if (props.rating <= 10) {\n    return `var(--color-green)`\n  }\n  } };\n`;","import { Link, useLocation } from \"react-router-dom\"\nimport { Item,Image, TitleH2, Info, Genres, Rating } from \"./MovieItem.styled\"\nimport { useState } from \"react\";\nimport { API_IMG } from \"api/api\";\nimport defaultImage from \"../../Images/defaultImage.png\"\nimport PropTypes from 'prop-types';\n\n\nexport const MovieItem = ({ id, posterPath, title, genres, releaseDate, rating }) => {\n  const [isPosterLoaded, setIsPosterLoaded] = useState(false);\n  const location = useLocation();\n  return (\n    <Item>\n      <Link\n        to={`/movies/${id}`} state={{ from: location }}\n      >\n        <Image\n          src={\n            posterPath && isPosterLoaded\n              ? `${API_IMG.IMAGE_URL}/w300${posterPath}`\n              : defaultImage\n          }\n          alt={title}\n          onLoad={() => setIsPosterLoaded(true)}\n          width=\"300\"\n          height=\"450\"\n        />\n      </Link>\n\n      <TitleH2>{title}</TitleH2>\n\n      <Info>\n        <Genres>\n          {genres} | {releaseDate.substring(0, 4)}\n        </Genres>\n        <Rating rating={rating} >{rating.toFixed(1)}</Rating>\n      </Info>\n    </Item>\n  )\n\n}\n\n\nMovieItem.propTypes = { \n  id: PropTypes.number,\n  posterPath: PropTypes.string ,\n  title: PropTypes.string,\n  genres: PropTypes.string,\n  releaseDate:PropTypes.string ,\n  rating:PropTypes.number ,\n}","import { List } from \"./MovieList.styled\"\nimport { MovieItem } from \"components/MovieItem/MovieItem\"\nimport { useState, useEffect } from \"react\"\nimport { fetchFilmsByGenre } from \"api/api\"\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ trendingFils }) => {\n\n  const [genreList, setGenreList] = useState([])\n  \n  useEffect(() => {\n\n    const getFetch = async () => {\n      try {\n        const result = await fetchFilmsByGenre();\n        setGenreList(result.data.genres)\n      } catch (err) {\n        console.log('error');\n      }\n    }\n    getFetch();\n  }, [])\n  \n  return (\n      <List>\n      {trendingFils.map(\n        ({ id, poster_path, title, release_date, vote_average, genre_ids }) => {\n          \n          const movieGenres = genreList\n            .filter((genre) => genre_ids.includes(genre.id))\n            .map((genre) => genre.name)\n            .join(', ')\n\n          return (\n            <MovieItem\n              key={id}\n              id={id}\n              posterPath={poster_path}\n              title={title}\n              releaseDate={release_date || '\\u2015'}\n              rating={vote_average}\n              genres={movieGenres || '\\u2015'}\n            />\n          )\n        },\n      )}\n    </List>\n    )\n}\n\nMovieList.propTypes = { \n  trendingFils: PropTypes.array\n}","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  display: grid;\n  margin-top:40px;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n  margin-bottom: 50px;\n`;","import { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const Notification = () => toast.error(\"We cannot find movie with such search parameter\", {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n}) \n        \nexport const Toast = () => {\n  return (\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={5000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n            theme=\"light\"\n          />\n  )\n}","import * as React from 'react';\nimport Stack from '@mui/material/Stack';\nimport Pagination from '@mui/material/Pagination';\nimport PropTypes from 'prop-types';\n\nexport default function PaginationButtons({ handleClick, page, totalPages}) {\n  \n  const pages = totalPages / 2;\n  return (\n    <Stack spacing={2}>\n      \n      <Pagination\n        onChange={(e, value) => handleClick(value)}\n        count={pages}\n        variant=\"outlined\"\n        \n        page={page}\n        sx={{\n          \".MuiPaginationItem-root.Mui-selected\": {\n            color: \"green\",\n            border: \"1px solid green\",\n            backgroundColor: \"rgba(25, 118, 210, 0.12)\",\n          },\n          \".MuiPagination-ul\": {\n            justifyContent: \"center\",\n            marginBottom: \"50px\",\n          },\n        }}\n      />\n        \n    </Stack>\n  );\n}\n\nPaginationButtons.propTypes = {\n  handleClick: PropTypes.func,\n  page: PropTypes.number,\n  totalPages: PropTypes.number,\n}","import styled from \"styled-components\";\n\n\n\n\n\n\nexport const MovieWrapper = styled.main`\n  \n`;","// import styled from \"styled-components\";\nimport {  styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\n\nexport const CssTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: 'var(--color-green)',\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: 'var(--color-green)',\n  },\n  \n});\n\n","import PropTypes from 'prop-types';\nimport SearchIcon from '@mui/icons-material/Search';\n\nimport { CssTextField } from './Search.styled';\nimport Box from '@mui/material/Box';\n\nexport const Search = ({onSubmit}) => {\n  return (\n\n    <Box\n      component=\"form\"\n      sx={{ '& > :not(style)': { m: 1, pb: 2, } }}\n      onSubmit={e => onSubmit(e)}\n    >\n      <Box\n        sx={{ display: 'flex', alignItems: 'flex-end' }}\n      >\n        <SearchIcon\n          sx={{ color: 'action.active', mr: 1, }} \n          \n          />\n        <CssTextField\n          name=\"query\"\n          type=\"text\"\n          label=\"Tap to fid film\"\n          variant=\"standard\"\n          sx={{ width: \"400px\" }} />\n      </Box>\n    </Box>\n  )\n}\n\nSearch.propTypes = {\n    onSubmit: PropTypes.func,\n}\n\n","import styled from \"styled-components\";\n\nimport { NavLink } from \"react-router-dom\";\n\nexport const LinkItem = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &:hover {\n    color: orangered;\n  }\n`;\n\nexport const Text = styled.p`\n  padding: 8px 0;\n  font-size: 20px;\n  display: inline-block;\n`;\nexport const ListItem = styled.li`\n  \n`;\n\nexport const Title = styled.h1`\n  padding: 8px 0;\n  font-size: 40px;\n  display: inline-block;\n  margin-bottom: 10px;\n`;\n\nexport const List = styled.ul`\n  margin-top: 15px;\n`;\n\nexport const Wrapper = styled.main`\n  min-height: 100%;\n  display:flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n`;","import { useState, useEffect } from 'react';\nimport { fetchFilmsByQuery } from 'api/api';\nimport { useSearchParams} from 'react-router-dom';\nimport { Search } from 'components/SearchBar/Search';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Wrapper } from './Movies.styled';\nimport { MovieWrapper } from \"./Home.styled\";\nimport { Notification,Toast } from 'components/Notification/Notification';\nimport PaginationButtons from 'components/Pagination/Pagination';\n\nconst Movies = () => {\n  const [status, setStatus] = useState('idle')\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  \n  const search = searchParams.get(\"name\") ?? '';\n  const pageURL = searchParams.get(\"page\") || 1;\n  \n\n  const handleSubmit = e => {\n  e.preventDefault();\n  setSearchParams({ name: e.target.elements.query.value, page: pageURL})\n    \n  };\n\n  const handleClickPagination = (page) => {\n    setPage(page);\n    setSearchParams( { name: search,  page: page})\n  }\n  useEffect(() => {\n   \n   if (!search) return\n   const getFetch = async () => {\n      try {\n        const result = await fetchFilmsByQuery(search, pageURL);\n        setSearchResults([...result.data.results])\n        setPage(result.data.page)\n        setTotalPages(result.data.total_pages)\n\n        if (searchResults.length === 0) {\n          throw new Error();\n        }\n        setStatus(\"resolved\")\n        \n      } catch (err) {\n        setStatus(\"rejected\")\n        Notification();\n      }\n    }\n    getFetch();\n  }, [page, pageURL, search, searchParams, searchResults.length])\n\n  if (status === \"idle\") {\n    return (\n    <Wrapper>\n      <Search\n        onSubmit={handleSubmit}\n        value={search}\n        />\n    </Wrapper>\n    )\n  }\n  if (status === \"pending\") {\n    return (\n      <Wrapper>\n      <Search\n        onSubmit={handleSubmit}\n        value={search}\n        />\n      </Wrapper>\n    )\n  }\n\n  if (status === \"resolved\") {\n    return (\n    <Wrapper>\n      \n      <Search\n        onSubmit={handleSubmit}\n        value={search}\n        />\n      {searchResults && (\n        <MovieWrapper>\n          <MovieList trendingFils={searchResults } />\n          <PaginationButtons\n            page={page}\n            handleClick={handleClickPagination}\n            totalPages={totalPages}\n          />\n        </MovieWrapper>\n      )}\n    </Wrapper>\n  );\n  }\n  if (status === \"rejected\") {\n    return (\n      <Wrapper>\n      \n      <Search\n        onSubmit={handleSubmit}\n        value={search}\n        />\n      <Toast/>\n    </Wrapper>\n    )\n  }\n};\n\nexport default Movies"],"names":["axios","API_IMG","IMAGE_URL","fetchFilms","page","params","api_key","response","fetchFilmsByGenre","fetchFilmsById","id","data","fetchFilmsByCredits","cast","fetchFilmsReviews","results","fetchFilmsByQuery","query","fetchVideo","Item","styled","Image","TitleH2","Info","Genres","Rating","props","rating","MovieItem","posterPath","title","genres","releaseDate","useState","isPosterLoaded","setIsPosterLoaded","location","useLocation","to","state","from","src","defaultImage","alt","onLoad","width","height","substring","toFixed","MovieList","trendingFils","genreList","setGenreList","useEffect","getFetch","result","console","log","map","poster_path","release_date","vote_average","genre_ids","movieGenres","filter","genre","includes","name","join","List","Notification","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","Toast","newestOnTop","rtl","pauseOnFocusLoss","PaginationButtons","handleClick","pages","totalPages","spacing","onChange","e","value","count","variant","sx","color","border","backgroundColor","justifyContent","marginBottom","MovieWrapper","CssTextField","TextField","borderBottomColor","Search","onSubmit","Box","component","m","pb","display","alignItems","mr","type","label","Wrapper","NavLink","status","setStatus","searchResults","setSearchResults","useSearchParams","searchParams","setSearchParams","setPage","setTotalPages","search","get","pageURL","handleSubmit","preventDefault","target","elements","total_pages","length","Error","Pagination"],"sourceRoot":""}